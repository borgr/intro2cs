import datetime
from geo import Position as P,Position,geo_distance
from string import ascii_letters
from data import load_sentiments,load_states
import itertools as it
import random

try:
    from helper import Tweet,load_tweets,find_closest2 as f,find_containing2 as g,gtbs
except:
    from tweet import Tweet
    from data import load_tweets
    from geo_tweet_tools import find_closest_state,find_containing_state,find_center
    from geo import us_states
    us_centers = {n: find_center(s) for n, s in us_states.items()}
    f = find_closest_state(us_centers)
    g = find_containing_state(us_states)
    from geo_tweet_tools import group_tweets_by_state as gtbs

terms = ['computer science','basketball','python','israel','hebrew','soup','soap','chess','microsoft','homework','texas','computer','sandwich','qqqqqqqqqqqqqq']

tweetsets = [load_tweets(term) for term in terms]
grouped = [gtbs(tws,f) for tws in tweetsets]
word_sentiments = load_sentiments()

goodterms = ['computer science','basketball','python','israel','soup','soap','chess','microsoft','homework','texas','computer','qqqqqqqqqqqqqq']
answers = ['CA', 'LA', 'CA', 'NJ', 'VT', 'CA', 'CA', 'NJ', 'WA', 'CA', 'TX', 'CA', 'NJ', None]
talkative = [('most_talkative_state',[tws,f],{},ans) for tws,ans,term in zip(tweetsets,answers,terms) if term in goodterms]

answers = [{'MA': -0.25, 'AK': -0.2916666666666667, 'NJ': 0.125, 'GA': 0.3125, 'OH': -0.125, 'NM': -0.25, 'OK': -0.25, 'LA': 0.16666666666666666, 'DC': -0.17708333333333334, 'MO': -0.25, 'UT': -0.375, 'CA': -0.125, 'IN': 0.25, 'NY': -0.25, 'TN': 0.0, 'PA': 0.375, 'IL': -0.16964285714285715},
           {'KS': 0.08928571428571429, 'WI': -0.4583333333333333, 'KY': 0.025674019607843136, 'WA': 0.20833333333333334, 'MI': 0.09375, 'MN': 0.125, 'MO': 0.1371527777777778, 'UT': 0.5, 'IA': 0.14583333333333331, 'IN': 0.09680451127819549, 'IL': 0.15200617283950615, 'MA': 0.06791666666666667, 'WV': -0.24609375, 'MD': 0.04389880952380952, 'NC': 0.19353448275862067, 'CT': 0.08146929824561404, 'NE': 0.25, 'ND': -0.0625, 'NJ': 0.025670903954802267, 'NH': 0.2916666666666667, 'NM': 0.296875, 'DC': -0.031539351851851846, 'DE': 0.3263888888888889, 'MS': -0.008184523809523812, 'NY': 0.1527777777777778, 'SC': 1.2335811384723961e-17, 'PR': -0.25, 'PA': 0.16435185185185186, 'VA': 0.359375, 'FL': 0.0644731040564374, 'RI': 0.075, 'TN': -0.016276041666666668, 'LA': 0.02233796296296296, 'TX': -0.07747395833333333, 'HI': 0.10416666666666667, 'VT': 0.3333333333333333, 'AL': 0.14997412008281574, 'CO': -0.25, 'CA': 0.04493097771023303, 'OH': 0.019334349593495934, 'OK': 0.17592592592592593, 'AZ': 0.011904761904761906, 'OR': -0.02291666666666666, 'AR': 0.008391203703703708, 'GA': -0.05037878787878788},
           {'CA': 0.625},
           {'MA': -0.1236111111111111, 'MD': 0.4375, 'CO': -0.125, 'NJ': 0.02314814814814814, 'FL': 0.03387445887445887, 'NM': -0.5, 'PR': 0.1875, 'DC': 0.5, 'DE': 0.125, 'NV': -0.125, 'OR': 0.625, 'CA': 0.2916666666666667, 'IN': 0.4583333333333333, 'AZ': -0.25, 'NY': -0.25, 'OK': 0.5, 'IL': -0.1875, 'TX': -0.34375, 'MO': 0.5},
           {'TX': -0.041666666666666664, 'MN': 0.5, 'UT': -0.25, 'CA': 0.375, 'NJ': 0.09027777777777779, 'NY': -0.25, 'VT': 0.09375, 'TN': 0.0},
           {'KS': 0.625, 'CA': 0.0076601473922902515, 'WI': -0.04722222222222223, 'PA': 0.1011904761904762, 'KY': -0.21875, 'WA': 0.06979166666666667, 'MT': 0.15104166666666666, 'TN': 0.375, 'LA': 0.05324074074074074, 'MI': -0.3958333333333333, 'MN': -0.125, 'MO': 0.08854166666666669, 'IA': 0.02152777777777778, 'IN': -0.022916666666666665, 'TX': 0.0078125, 'IL': 0.07403846153846153, 'MA': 0.28906249999999994, 'HI': 0.4583333333333333, 'MD': 0.23958333333333334, 'ME': -0.09375, 'NC': -0.008333333333333333, 'AL': 0.013888888888888876, 'AK': -0.25, 'CT': 0.03199404761904763, 'CO': -0.12053571428571429, 'NJ': 0.29504419191919184, 'VT': -0.23958333333333334, 'NH': 0.125, 'OH': 0.03446969696969697, 'NM': 0.875, 'OK': 0.1545138888888889, 'RI': 0.0, 'DC': -0.5, 'DE': 0.3125, 'NV': 0.25, 'OR': 0.4166666666666667, 'FL': 0.18239583333333334, 'AZ': 0.005208333333333333, 'NY': 0.3294117647058824, 'SC': 0.203125, 'AR': -0.2916666666666667, 'GA': -0.14791666666666667},
           {'WI': 0.2916666666666667, 'MS': 0.0, 'VA': -0.16666666666666666, 'FL': 0.02708333333333333, 'WA': -0.05583333333333333, 'MT': -0.125, 'TN': -0.07291666666666667, 'IN': -0.4375, 'ID': 0.23863636363636365, 'MI': -0.09375, 'MN': 0.625, 'MO': 0.375, 'LA': -0.10243055555555554, 'TX': -0.5, 'IL': 0.21875, 'MA': -0.5, 'MD': 0.020833333333333343, 'NC': -0.4583333333333333, 'AL': -0.75, 'CT': 0.1525, 'NJ': 0.01875, 'CA': 0.003472222222222222, 'OH': -0.2109375, 'PR': 0.375, 'AR': -0.125, 'DC': 0.34375, 'AZ': -0.1875, 'OR': -0.07291666666666666, 'KY': -0.25, 'SC': -0.21875, 'PA': -0.1875, 'GA': 0.013888888888888888},
           {'NC': -0.09895833333333333, 'DE': -0.075, 'GA': 0.07638888888888888, 'SC': 0.25, 'PA': -0.5, 'CA': -0.21354166666666669, 'FL': -0.052083333333333315, 'WA': 0.0, 'RI': 0.125, 'TN': -0.25, 'MS': 0.07500000000000001, 'DC': 0.0, 'AZ': 0.2916666666666667, 'NJ': 0.0899621212121212, 'LA': 0.2916666666666667, 'TX': -0.20982142857142858, 'IL': -0.17857142857142858, 'MA': -0.25, 'AR': 0.53125, 'NY': -0.296875},
           {'PA': -0.043750000000000004, 'KY': -0.25, 'WA': -0.140758547008547, 'MT': -0.4375, 'TN': -0.25, 'IN': 0.4583333333333333, 'MI': 0.075, 'MN': -0.23611111111111108, 'MO': -0.09375, 'UT': -0.25, 'IA': -0.10416666666666667, 'LA': 0.1125, 'TX': -0.17052364864864866, 'IL': 0.09895833333333334, 'MA': -0.03750000000000002, 'MD': 0.375, 'ME': 0.0, 'NC': 0.22083333333333335, 'AK': 0.25, 'NJ': -0.006388888888888888, 'CA': 0.06296992481203008, 'OH': 0.140625, 'NM': 0.21875, 'OK': 0.4375, 'AR': -0.25, 'DC': -0.015625, 'AZ': 0.026041666666666668, 'NV': 0.2, 'OR': 0.125, 'FL': -0.10381944444444445, 'NY': 0.4375, 'SC': -0.10416666666666666, 'CT': -0.25, 'GA': 0.15, 'PR': 0.75},
           {'WI': -0.16666666666666669, 'NJ': -0.00347222222222221, 'PA': 0.25, 'MS': 0.125, 'VA': -0.16666666666666669, 'WA': -0.46875, 'TN': 0.0, 'IN': 0.15104166666666666, 'MI': -0.25, 'MO': 0.2, 'IA': 0.25, 'LA': -0.11666666666666667, 'TX': 0.25555555555555554, 'IL': 0.04166666666666666, 'MA': 0.15104166666666669, 'WV': -0.25, 'ME': 0.1875, 'NC': 0.05, 'AL': -0.07500000000000001, 'SC': 0.375, 'CO': 0.08333333333333333, 'CA': -0.07463972431077694, 'ND': 0.25, 'KY': 0.015625, 'NM': 0.010416666666666671, 'OH': -0.1368421052631579, 'AR': 0.0546875, 'DC': 0.04375, 'AZ': -0.25, 'FL': -0.04431818181818182, 'DE': -0.17361111111111113, 'NY': -0.20833333333333334, 'VT': -0.25, 'CT': -0.075, 'GA': 0.048611111111111126},
           {'KS': -0.09375, 'WI': -0.010416666666666661, 'KY': -0.10546875, 'WA': -0.023749999999999997, 'MT': 0.1875, 'MI': -0.026785714285714284, 'MN': -0.10714285714285714, 'MO': 0.09424603174603173, 'UT': 0.21006944444444445, 'IA': -0.05555555555555555, 'IN': 0.026960784313725485, 'IL': 0.15012254901960786, 'MA': -0.24791666666666667, 'WV': 0.3611111111111111, 'MD': -0.014880952380952384, 'ME': 0.625, 'NC': 0.16666666666666666, 'NE': 0.15535714285714286, 'NJ': -0.06597222222222221, 'NM': -0.07478632478632478, 'AR': -0.17485119047619047, 'DC': 0.0625, 'DE': -0.225, 'NV': 0.25, 'FL': 0.02264492753623188, 'NY': -0.065625, 'SC': 0.1076388888888889, 'VA': 0.0375, 'RI': -0.40625, 'TN': -0.060416666666666695, 'MS': 0.0625, 'LA': -0.05428382891618186, 'TX': 0.06507279071966342, 'HI': 0.0625, 'AL': -0.1875, 'CO': 0.12760416666666666, 'CT': -0.1125, 'OH': -0.06336805555555555, 'OK': 0.018633612662942278, 'AZ': -0.15246212121212122, 'OR': 0.11342592592592592, 'CA': -0.03614267676767677, 'PA': -0.0818452380952381, 'GA': 0.05768229166666667},
           {'KS': -0.48214285714285715, 'WI': 0.20714285714285713, 'KY': -0.02159090909090909, 'WA': -0.14285714285714285, 'MT': 0.049107142857142856, 'ID': 0.1875, 'MI': -0.13715277777777776, 'MN': 0.0881076388888889, 'MO': -0.06929166666666667, 'UT': 0.045138888888888895, 'IA': 0.02419871794871794, 'IN': -0.05833333333333332, 'IL': -0.03354700854700854, 'MA': 0.0375, 'MD': -0.2496794871794872, 'ME': 0.3645833333333333, 'NC': -0.14714912280701753, 'NE': 0.5208333333333334, 'ND': 0.002232142857142857, 'NJ': -0.08145833333333333, 'NH': 0.14062499999999997, 'NM': -0.10714285714285714, 'DC': 0.05583333333333334, 'DE': 0.5, 'NV': 0.08333333333333333, 'MS': -0.16038359788359788, 'NY': -0.07470238095238096, 'SC': -0.20137429971988796, 'PA': 0.159375, 'VA': 0.09375, 'FL': -0.1024671052631579, 'RI': -0.078125, 'TN': 0.043542960662525894, 'LA': -0.030753968253968263, 'TX': 0.023051075268817195, 'HI': 0.375, 'VT': -0.14750000000000002, 'AL': -0.18409090909090908, 'AK': -0.0029761904761904934, 'CO': -0.021130952380952382, 'CT': -0.020833333333333336, 'OH': -0.04125, 'OK': -0.16220238095238096, 'AZ': -0.008184523809523808, 'OR': -0.10885416666666665, 'CA': 0.010178571428571424, 'AR': 0.15625, 'GA': -0.05751811594202899},
           {'KS': -0.0625, 'WI': 0.1234375, 'KY': 0.11197916666666666, 'WA': 0.12833333333333333, 'MT': -0.065625, 'ID': 0.6875, 'MI': -0.002232142857142856, 'MN': 0.08255208333333333, 'MO': 0.02994791666666667, 'UT': 0.23958333333333334, 'IA': 0.08249999999999999, 'IN': 0.24955357142857143, 'IL': 0.021428571428571432, 'MA': 0.06054687500000001, 'WV': 0.125, 'MD': 0.04375, 'ME': 0.05598958333333334, 'NC': -0.14898809523809523, 'NE': 0.08333333333333333, 'ND': 0.0625, 'NJ': 0.1285811865729898, 'NH': -0.1875, 'NM': 0.4583333333333333, 'DC': 0.031686046511627916, 'DE': 0.011574074074074077, 'NV': 0.625, 'MS': 0.0, 'NY': -0.0625, 'SC': 0.12121212121212123, 'PA': -0.03935185185185185, 'VA': 0.125, 'FL': 0.033912037037037046, 'RI': -0.024553571428571428, 'TN': 0.12083333333333335, 'LA': 0.15360576923076924, 'TX': 0.17140151515151517, 'HI': -0.25, 'VT': -0.19444444444444445, 'AL': 0.18923611111111113, 'CO': 0.03988095238095237, 'CT': 0.1077724358974359, 'OH': -0.0592948717948718, 'OK': 0.29500000000000004, 'AZ': 0.1138888888888889, 'OR': -0.10416666666666667, 'CA': 0.11183712121212122, 'AR': 0.017857142857142856, 'GA': 0.04696180555555556},
           {},
           ]
average = [('average_sentiments',[gr,word_sentiments],{},ans) for tws,gr,ans in zip(tweetsets,grouped,answers)]

def maketweet(hour,minute):
    return Tweet('a',datetime.datetime(2326,9,30,hour,minute),0,0)
[23, 0, 5, 14, 15, 6, 20, 0, 20, 2, 10, 13, 10, 1, 7, 4, 17, 21, 10, 7, 19, 11, 5, 8, 11, 2, 22, 4, 23, 7, 21, 19, 6, 5, 19, 10, 7, 8, 21, 1, 8, 5, 5, 20, 1, 17, 1, 23, 22, 16, 18, 12, 1, 18, 19, 3, 14, 17, 9, 0]

minutelist = [[1, 7, 59], [13, 39, 44, 46, 52], [9, 25], [55], [15, 27], [2, 22, 33, 41, 42], [5, 32], [14, 19, 29, 36], [23, 37, 40], [58], [10, 12, 18, 35], [21, 24], [51], [11], [3, 56], [4], [49], [16, 45, 57], [50, 53], [20, 31, 34, 54], [6, 8, 43], [17, 30, 38], [26, 48], [0, 28, 47]]

minutelist = [[maketweet(i,s) for s in m] for i,m in enumerate(minutelist)]

def filtertweets(twlist,start,stop):
    return list(filter(lambda x:start <= x.get_time().minute < stop, twlist))

def deepfiltertweets(listlist,start,stop):
    return [filtertweets(twl,start,stop) for twl in listlist]

#from itertools docs
def roundrobin(*iterables):
    "roundrobin('ABC', 'D', 'EF') --> A D E B F C"
    # Recipe credited to George Sakkis
    pending = len(iterables)
    nexts = it.cycle(iter(it).__next__ for it in iterables)
    while pending:
        try:
            for next in nexts:
                yield next()
        except StopIteration:
            pending -= 1
            nexts = it.cycle(it.islice(nexts, pending))

def chaintweets(listlist,start,stop):
    return filtertweets(roundrobin(*listlist),start,stop)
    
byhour = [('group_tweets_by_hour',[chaintweets(minutelist,i,j)],{},deepfiltertweets(minutelist,i,j)) for i in range(60) for j in range(i,60)]

def makedict(l):
    return {name:eval(name) for name in l}

mset = makedict(['average','talkative','byhour'
                 ])

